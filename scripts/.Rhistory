getwd()
if(!requireNamespace("dplyr"))
install.packages("dplyr")
if(!requireNamespace("here"))
install.packages("here")
if(!requireNamespace("readr"))
install.packages("readr")
library(dplyr)
library(here)
library(readr)
library(dplyr)
library(here)
library(readr)
print("Loading data..")
path_raw <- "raw/"
# bookings file
file_book <- "train_users_2.csv"
# bookings dataset
book_raw <- read_csv(paste0(path_raw, file_book))
# number of rows and columns
records_raw <- nrow(book_raw)
fields_raw <- ncol(book_raw)
print("Loading data..")
path_raw <- "Airbnb/raw/"
# bookings file
file_book <- "train_users_2.csv"
# bookings dataset
book_raw <- read_csv(paste0(path_raw, file_book))
# number of rows and columns
records_raw <- nrow(book_raw)
fields_raw <- ncol(book_raw)
# load airbnb booking dataset
print("Loading data..")
path_raw <- "Airbnb-Causal-Inference/raw/"
# bookings file
file_book <- "train_users_2.csv"
# bookings dataset
book_raw <- read_csv(paste0(path_raw, file_book))
# number of rows and columns
records_raw <- nrow(book_raw)
fields_raw <- ncol(book_raw)
here()
print("Loading data..")
path_raw <- "/raw/"
# bookings file
file_book <- "train_users_2.csv"
# bookings dataset
book_raw <- read_csv(paste0(path_raw, file_book))
# number of rows and columns
records_raw <- nrow(book_raw)
fields_raw <- ncol(book_raw)
print("Loading data..")
path_raw <- "./raw/"
# bookings file
file_book <- "train_users_2.csv"
# bookings dataset
book_raw <- read_csv(paste0(path_raw, file_book))
# number of rows and columns
records_raw <- nrow(book_raw)
fields_raw <- ncol(book_raw)
path_raw
paste0(path_raw, file_book)
getwd()
library(here)
################## Set relative directory ##################
# creates an empty file, .here and uses this location as the root directory
# only needs to be done once
set_here()
here()
# load airbnb booking dataset
print("Loading data..")
path_raw <- "raw/"
# bookings file
file_book <- "train_users_2.csv"
# bookings dataset
book_raw <- read_csv(paste0(path_raw, file_book))
print("Loading data..")
path_raw <- "Airbnb-Causal-Inference/raw/"
# bookings file
file_book <- "train_users_2.csv"
# bookings dataset
book_raw <- read_csv(paste0(path_raw, file_book))
here()
ls()
if(!requireNamespace("dplyr"))
install.packages("dplyr")
if(!requireNamespace("here"))
install.packages("here")
if(!requireNamespace("readr"))
install.packages("readr")
library(dplyr)
library(here)
library(readr)
# load airbnb booking dataset
print("Loading data..")
path_raw <- "raw"
# bookings file
file_book <- "train_users_2.csv"
# bookings dataset
book_raw <- read_csv(here(path_raw, file_book))
# number of rows and columns
records_raw <- nrow(book_raw)
fields_raw <- ncol(book_raw)
print("Cleaning data...")
print("Remove unknown gender values..")
# remove unknown gender
# include only users ages 18 - 80
print("Filter to ages 18 - 80...")
book <- book_raw %>% filter(between(age, 18, 80)
& gender != "-unknown-")
# direct vs. marketing ads
print("Binarize variables..")
book$is_mkt <- if_else(book$affiliate_channel == "direct", 0, 1)
# group book vs. non-booked
book$is_booked <- if_else(book$country_destination == "NDF", 0, 1)
# binarize english vs. non-english
# consider one-hot key encoding instead
book$is_eng <- if_else(book$language == "en", 1, 0)
# binarize signup app (mobile vs. desktop)
book$is_mobile <- if_else(book$signup_app %in% c("Android", "iOS"), 1, 0)
################## Clean timestamp column ##################
print("Clean timestamp columns..")
## Number of days between account created and first active ##
# convert to date
book$date_first_active <- as.Date(substr(book$timestamp_first_active, 1, 8), "%Y%m%d")
# number of days between account created and date first active
book$days_diff <- as.numeric(book$date_account_created - book$date_first_active, units = "days")
head(book)
colnames(book)
glm(is_booked ~ gender + age + is_marketing, family="binomial"))
glm(is_booked ~ gender + age + is_marketing, family="binomial")
glm(is_booked ~ gender + age + is_marketing, data = book, family="binomial")
glm(is_booked ~ gender + age + is_mkt, data = book, family="binomial")
glm(is_booked ~ gender + age + language + is_mkt, data = book, family="binomial")
glm(is_booked ~ gender + age + is_mkt, data = book, family="binomial")
t <- glm(is_booked ~ gender + age + is_mkt, data = book, family="binomial")
coef(t)
coef(t)["is_mkt"]
coef(t)["is_mkt"][[1]]
treat_eff <- coef(t)["is_mkt"][[1]]
treat_eff
odds <- exp(treat_eff)
odds / (1 + odds)
predict(t, type = "response")
book$is_booked_prob <- predict(t, type = "response")
tapply(book$is_booked_prob, book$is_booked, mean)
library(tidyverse)
library(arm)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(arm)
knitr::opts_chunk$set(echo = TRUE)
library(arm)
library(here)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
# load bookings data
book <- read_csv(here("data", "bookings.csv"))
colnames(book)
?predict
# see preliminary effects using logistic model
lr <- glm(is_booked ~ age + gender + is_mkt + first_device_type,
data = book
family = binomial(link = "logit"))
# see preliminary effects using logistic model
lr <- glm(is_booked ~ age + gender + is_mkt + first_device_type,
data = book,
family = binomial(link = "logit"))
# get probabilities of booking
book$is_booked_p <- predict(lr, type = "response")
# see preliminary effects using logistic model
lr <- glm(is_booked ~ age + gender + is_mkt + first_device_type,
data = book,
family = binomial(link = "logit"))
# get probabilities of booking
book$is_booked_p <- predict(lr, type = "response")
tapply(book$is_booked_p, book$is_booked, summary)
tapply(book$is_booked_p, book$is_booked, mean)
colnames(book)
coef(lr)
# see preliminary effects using logistic model
lr <- glm(is_booked ~ age + gender + is_mkt + first_device_type,
data = book,
family = binomial(link = "logit"))
summary(lr)
# get probabilities of booking
book$is_booked_p <- predict(lr, type = "response")
tapply(book$is_booked_p, book$is_booked, mean)
# see preliminary effects using logistic model
summary(lr <- glm(is_booked ~ age + gender + is_mkt + first_device_type,
data = book,
family = binomial(link = "logit")))
# get probabilities of booking
book$is_booked_p <- predict(lr, type = "response")
tapply(book$is_booked_p, book$is_booked, mean)
# see preliminary effects using logistic model
summary(lr <- glm(is_booked ~ age + gender + is_mkt + first_device_type,
data = book,
family = binomial(link = "logit")))
# get probabilities of booking
book$is_booked_p <- predict(lr, type = "response")
tapply(book$is_booked_p, book$is_booked, mean)
head(book$is_booked)
book %>% select(is_booked, is_booked_p) %>% head()
head(book %>% select(is_booked, is_booked_p), 20)
book %>% select(is_booked, is_booked_p)
book %>% select(is_booked)
colnames(book)
book %>% select(id)
library(arm)
library(here)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
book %>% select(id)
# load bookings data
book <- read_csv(here("data", "bookings.csv"))
# see preliminary effects using logistic model
summary(lr <- glm(is_booked ~ age + gender + is_mkt + first_device_type,
data = book,
family = binomial(link = "logit")))
# get probabilities of booking
book$is_booked_p <- predict(lr, type = "response")
tapply(book$is_booked_p, book$is_booked, mean)
library(arm)
library(here)
library(tidyverse)
library(WeightIt)
knitr::opts_chunk$set(echo = TRUE)
if(!requireNamespace("arm"))
install.packages("arm")
if(!requireNamespace("here"))
install.packages("here")
if(!requireNamespace("tidyverse"))
install.packages("tidyverse")
if(!requireNamespace("BART"))
install.packages("BART")
library(arm)
library(here)
library(tidyverse)
library(BART) # GBM for alternative propensity score
knitr::opts_chunk$set(echo = TRUE)
exp(-.23)
